#!/usr/bin/env node
"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
var path = require('path');
var fs = require('fs');
var argv = require('yargs').argv;
var liveServer = require('live-server');
var telemetry_1 = require("../generated/telemetry");
telemetry_1.trackEvent(telemetry_1.TelemetryEvent.Start);
console.log("\nStarting control harness...");
var verbs = ['pcf', 'start'];
if (argv.watch) {
    verbs.push('watch');
}
var customProperties = {
    'Verbs': verbs
};
telemetry_1.trackEvent(telemetry_1.TelemetryEvent.StartExecutingVerb, customProperties);
var startTime = (new Date()).getTime();
var codePath = argv.codePath;
// default to cwd if not specified
if (!codePath || codePath === true) {
    codePath = '.';
}
else if (!fs.existsSync(path.resolve(process.cwd(), codePath))) {
    console.error("The specified codePath '" + codePath + "' does not exist.");
    process.exit(1);
}
// Start server
var options = {
    port: 8181,
    host: '0.0.0.0',
    root: path.resolve(process.cwd(), codePath),
    open: true,
    ignore: path.join(__dirname, '../node_modules'),
    file: 'index.html',
    wait: 1000,
    mount: [['/', path.join(__dirname, '../')]],
    logLevel: 1 // 0 = errors only, 1 = some, 2 = lots
};
liveServer.start(options);
var customMeasurement = {
    'Execution Time(ms)': (new Date()).getTime() - startTime
};
customProperties['Success'] = true;
telemetry_1.trackEvent(telemetry_1.TelemetryEvent.EndExecutingVerb, customProperties, customMeasurement);
telemetry_1.trackEvent(telemetry_1.TelemetryEvent.End);
telemetry_1.flushTelemetry();
